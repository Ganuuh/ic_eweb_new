import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { Footer, Header } from "@/components/common";
import dynamic from "next/dynamic";
import { i18n, Locale } from "@/lib/i18n-config";

const ThemeProvider = dynamic(
  () => import("@/components/providers/theme_provider")
);
const LanguageProvider = dynamic(
  () => import("@/components/providers/language_provider")
);

// Define all your font variations
const schriftedSans = localFont({
  src: [
    {
      path: "../../fonts/schrifted_regular.woff",
      weight: "400",
      style: "normal",
    },
    {
      path: "../../fonts/schrifted_medium.woff",
      weight: "500",
      style: "normal",
    },
    {
      path: "../../fonts/schrifted_bold.woff",
      weight: "700",
      style: "normal",
    },
  ],
  variable: "--font-schrifted-sans",
  display: "swap",
});

// For Gesit Mono if you want to use it
const geistMono = localFont({
  src: "../../fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  display: "swap",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export async function generateStaticParams() {
  return i18n.locales.map((locale) => ({ lang: locale }));
}

export default function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: { lang: Locale };
}>) {
  return (
    <html lang={params.lang}>
      <body
        className={`${schriftedSans.variable} ${geistMono.variable} font-sans antialiased`}
      >
        <LanguageProvider
          lang={{
            lang: params.lang,
          }}
        >
          <ThemeProvider>
            <Header />
            {children}
            <Footer />
          </ThemeProvider>
        </LanguageProvider>
      </body>
    </html>
  );
}
